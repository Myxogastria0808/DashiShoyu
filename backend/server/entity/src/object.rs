//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "object")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    #[sea_orm(unique)]
    pub photo_url: String,
    pub mime_type: String,
    pub license: String,
    pub description: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::object_tag_junction::Entity")]
    ObjectTagJunction,
}

impl Related<super::object_tag_junction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ObjectTagJunction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
